
  // –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –Ω–∞–±–æ—Ä —Å–∏–º–≤–æ–ª–æ–≤ (120 —ç–ª–µ–º–µ–Ω—Ç–æ–≤)
  const symbols = [
    "·ö†", "·ö¢", "·ö¶", "·ö®", "·ö±", "·ö≤", "·ö∑", "·öπ", "·ö∫", "·öª", 
    "·öæ", "·öø", "·õÅ", "·õÇ", "·õÉ", "·õá", "·õà", "·õâ", "·õä", "·õã",
    "·õå", "·õç", "·õé", "·õè", "·õê", "·õë", "·õí", "·õì", "·õî", "·õï",
    "‚òâ", "‚òø", "‚ôÄ", "‚ôÅ", "‚ôÇ", "‚ôÉ", "‚ôÑ", "‚ôÖ", "‚ôÜ", "‚ôá",
    "üúÄ", "üúÅ", "üúÇ", "üúÉ", "üúÑ", "üúÖ", "üúÜ", "üúá", "üúà", "üúâ",
    "ìÄÄ", "ìÄÅ", "ìÄÇ", "ìÄÉ", "ìÄÑ", "ìÄÖ", "ìÄÜ", "ìÄá", "ìÄà", "ìÄâ",
    "‚ò•", "ìÇÄ", "‚ò§", "‚öö", "üïâ", "‡•ê", "‚ú°", "‚òØ", "‚òÆ", "‚ò∏",
    "ÍßÅ", "ÍßÇ", "‚ú∫", "‚úπ", "‚ú∏", "‚ú∑", "‚ú∂", "‚úµ", "‚ú¥", "‚ú≥",
    "‚ú≤", "‚ú±", "‚ú∞", "‚ú¶", "‚úß", "‚ú©", "‚ú™", "‚ú´", "‚ú¨", "‚ú≠",
    "‚öï", "‚öñ", "‚öó", "‚öò", "‚öô", "‚öö", "‚öõ", "‚öú", "‚öù", "‚öû",
    "‚öü", "‚ö†", "‚ö°", "‚ö¢", "‚ö£", "‚ö§", "‚ö•", "‚ö¶", "‚öß", "‚ö®",
    "‚ö©", "‚ö™", "‚ö´", "‚ö¨", "‚ö≠", "‚öÆ", "‚öØ", "‚ö∞", "‚ö±", "‚ö≤",
    "‚ú°Ô∏è","üîÆ","üúÅ","üúÇ","üúÉ","üúÑ","üúÖ","üúÜ","üúá","üúà",
    "‚öïÔ∏è","‚öñÔ∏è","üîØ","üïâÔ∏è","‚ò•","‚ò¨","‚ò∏Ô∏è","‚òØÔ∏è","‚ò¶Ô∏è","‚úùÔ∏è",
    "‚ò™Ô∏è","‚ò´Ô∏è","‚ò¨Ô∏è",
    "‚öóÔ∏è","üî±","üî∫","üîª","üî∏","üîπ","üî∂","üî∑",
    "‚öñÔ∏è","‚öôÔ∏è","‚öîÔ∏è","‚ö∞Ô∏è","‚ö±Ô∏è","‚öñÔ∏è",
    "üïé","‚ú†","‚ú°Ô∏é ","‚ú¶ ","‚úß ","‚ú© ","‚ú™ ","‚ú´ ","‚ú¨ ","‚ú≠ ",
    "‚òÄÔ∏è ","üåô ","‚≠ê ","‚ú® ",
    "üî• ","üíß ","üåü ","üåà ","üå™Ô∏è ","üåä ","üå¨Ô∏è ",
    "üîÆ ","üìø ","üßô‚Äç‚ôÇÔ∏è ","üßô‚Äç‚ôÄÔ∏è ","üßô‚Äç‚ôÇÔ∏è‚Äç‚ôÄÔ∏è ","ìÄÄ","ìÅê","ìÇÄ","ìÉ∞","ìÑø","ìÖì",
    "·ö†", "·ö¢", "·ö¶", "·ö®", "·ö±", "·ö≤", "·ö∑", "·öπ", "·ö∫", "·öª",
    "·öæ", "·öø", "·õÅ", "·õÇ", "·õÉ", "·õá", "·õà", "·õâ", "·õä", "·õã",
    "·õå", "·õç", "·õé", "·õè", "·õê", "·õë", "·õí", "·õì", "·õî", "·õï",
    "‚òâ", "‚òø", "‚ôÄ", "‚ôÅ", "‚ôÇ", "‚ôÉ", "‚ôÑ", "‚ôÖ", "‚ôÜ", "‚ôá"
  ];

  const colors = [
    "#20c20e", "#ff0000", "#00a2ff", "#ffffff", 
    "#ffd700", "#9400d3", "#ff00ff", "#00ffff",
    "#4b0082", "#ff8c00", "#7cfc00", "#ff1493"
  ];

  const container = document.querySelector('.matrix-background');
  let symbolsCount = 0;
  const maxSymbols = 100; // –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤ –Ω–∞ —ç–∫—Ä–∞–Ω–µ 

   function createSymbol() {
  if (symbolsCount >= maxSymbols) return;
  
  const symbol = document.createElement('div');
  symbol.className = 'matrix-symbol';
  
  // –†–∞–∑–º–µ—Ä –∏ –ø—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç—å
  const size = Math.round((0.01 + Math.random() * 4.5) * 16); // –º–µ–Ω—è—Ç—å —Ä–∞–∑–º–µ—Ä —Å–∏–º–≤–æ–ª–æ–≤. 
  const opacity = 0.4 + Math.random() * 0.6;

  // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø–æ–∑–∏—Ü–∏–π (50% —Å –∫—Ä–∞—ë–≤, 50% –≤–Ω—É—Ç—Ä–∏ —ç–∫—Ä–∞–Ω–∞)
  let startX, startY;
  if (Math.random() > 0.5) {
    const edge = Math.floor(Math.random() * 4);
    const padding = 50;
    startX = edge % 2 ? 
      (edge === 1 ? window.innerWidth + padding : -padding) : 
      Math.random() * window.innerWidth;
    startY = edge % 2 ? 
      Math.random() * window.innerHeight : 
      (edge === 0 ? -padding : window.innerHeight + padding);
  } else {
    startX = Math.random() * window.innerWidth;
    startY = Math.random() * window.innerHeight;
  }

  // –°–ª—É—á–∞–π–Ω–æ–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏ —Å–∫–æ—Ä–æ—Å—Ç—å
  const angle = Math.random() * Math.PI * 2;
  const distance = 200 + Math.random() * 600;
  const duration = 4 + Math.random() * 8; // 4-12 —Å–µ–∫—É–Ω–¥

  const endX = startX + Math.cos(angle) * distance;
  const endY = startY + Math.sin(angle) * distance;

  // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —ç–ª–µ–º–µ–Ω—Ç–∞
  symbol.textContent = symbols[Math.floor(Math.random() * symbols.length)];
  symbol.style.cssText = `
    --symbol-size: ${size}px;
    --start-x: ${startX}px;
    --start-y: ${startY}px;
    --end-x: ${endX}px;
    --end-y: ${endY}px;
    --start-rotation: ${(Math.random() - 0.5) * 360}deg;
    --end-rotation: ${(Math.random() - 0.5) * 360}deg;
    --max-opacity: ${opacity};
    color: ${colors[Math.floor(Math.random() * colors.length)]};
    animation-duration: ${duration}s;
  `;

  container.appendChild(symbol);
  symbolsCount++;

  // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Ä–µ—Å–ø–∞–≤–Ω –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –∞–Ω–∏–º–∞—Ü–∏–∏
  symbol.addEventListener('animationend', () => {
    symbol.remove();
    symbolsCount--;
    createSymbol(); // –°–æ–∑–¥–∞—ë–º –Ω–æ–≤—ã–π —Å–∏–º–≤–æ–ª –≤–º–µ—Å—Ç–æ –∏—Å—á–µ–∑–Ω—É–≤—à–µ–≥–æ
  });
}
 // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
function startAnimation() {
  // –ü–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω–æ–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ
  for (let i = 0; i < 100; i++) createSymbol();
  
  // –ü–æ—Å—Ç–æ—è–Ω–Ω–æ–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤
  const intervalId = setInterval(createSymbol, 30);
  
  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ä–µ—Å–∞–π–∑–∞
  window.addEventListener('resize', () => {
    clearInterval(intervalId);
    document.querySelectorAll('.matrix-symbol').forEach(el => el.remove());
    symbolsCount = 0;
    startAnimation();
  });
}

startAnimation();